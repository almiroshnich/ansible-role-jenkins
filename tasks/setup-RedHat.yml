---
- name: Ensure dependencies are installed.
  package:
    name:
      - curl
      - libselinux-python
      - initscripts
    state: installed

- name: Ensure Jenkins repo is installed.
  get_url:
    url: "{{ jenkins_repo_url }}"
    dest: /etc/yum.repos.d/jenkins.repo
  when: jenkins_repo_url != ''

- name: Add Jenkins repo GPG key.
  rpm_key:
    state: present
    key: "{{ jenkins_repo_key_url }}"

- name: Download specific Jenkins version.
  get_url:
    url: "{{ jenkins_pkg_url }}/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
    dest: "/tmp/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
  when: jenkins_version is defined

- name: Check if we downloaded a specific version of Jenkins.
  stat:
    path: "/tmp/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
  register: specific_version
  when: jenkins_version is defined

- name: Install our specific version of Jenkins.
  package:
    name: "/tmp/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
    state: installed
  when: jenkins_version is defined and specific_version.stat.exists

- name: Ensure Jenkins is installed.
  package:
    name: jenkins
    state: "{{ jenkins_package_state }}"

- name: Remove installer package afterwards
  file:
    path: "/tmp/jenkins-{{ jenkins_version }}-1.1.noarch.rpm"
    state: absent
  ignore_errors: yes

# Custom
# TODO: propage to the Debian setup as well
- name: Disable SElinux permanetly
  selinux: state=disabled

- name: Install EPEL needed package management
  yum: name=epel-release state=present update_cache=yes

- name: Install System Base Packages
  yum: name={{ item }} state=present
  with_items:
    - unzip
    - ntp
    - git
    - nano
    - python-pip
    - python-devel
